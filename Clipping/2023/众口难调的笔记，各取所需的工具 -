> 本文由 [简悦 SimpRead](http://ksria.com/simpread/) 转码， 原文地址 [utgd.net](https://utgd.net/article/9388)

> 本文原作者为 Chris Grieser，Minja 获其授权编译。

本文作者为 [Chris Grieser](https://chris-grieser.de/)，原文标题为 [One-Size-Fits-All? How to Take Big Notes and How to Take Small Notes](https://www.obsidianroundup.org/one-size-fits-all-how-to-take-big-notes-and-how-to-take-small-notes/)，我（Minja）获其授权编译并转载。Grieser 是柏林工业大学（德国）的社会学研究助理。他以严肃的学术方法思考笔记软件，在博士项目中调查了软件生态系统的管理问题；同时，Grieser 也活跃于 Obsidian 社区，并编写了一些插件和主题。你可以在 Twitter 上关注 [他](https://twitter.com/pseudo_meta)。

这篇文章是 Grieser 关于笔记篇幅、方法与工具之间相互关系的思考，在热衷于技术细节的笔记社区中尤为难得，能够将其译为中文，我深感荣幸。考虑到 Grieser 对于工具的熟稔以及对于材料的旁征博引，这篇文章绝对有血有肉，而不是夸夸其谈之作。当然，翻译和表达上的疏误概由我负责。

简介 [1](#fn:1)
-------------

在历史上，媒体内容的篇幅往往是技术桎梏的结果。例如，[GSM-7 协议把短信限制到 160 个字符内](https://www.twilio.com/docs/glossary/what-sms-character-limit#what-is-the-history-behind-sms-message-length) 。又如，在流媒体之前的影视产业中，[一集电视节目的长度通常被限制在 22 或 42 分钟，如此一来，这些节目就能和广告一起融入半小时或一小时长的时间块中](https://www.indiewire.com/2019/04/tv-show-runtime-game-of-thrones-veep-barry-sons-of-anarchy-1202127051/) 。自流媒体服务问世以降，这种限制消失了，导演们开始制作更多不同长度的剧集。如今，一集节目的长度不再由广播网络的时间段决定，[而是由创意因素决定，比如创造更多不可预测的情节](https://www.hollywoodreporter.com/tv/tv-news/tvs-age-entitlement-why-episodes-are-damn-long-1010621/) 。

在笔记的世界里，我们正经历着类似的发展：我们曾受限于一张纸的大小，而笔记软件的兴起让我们能够写更长的笔记。[2](#fn:2) 知识不存在固有的大小一说，笔记又何苦圈地自萌呢？然而，**能够**写更长的笔记并不一定意味着我们**应该**这样做——Zettelkasten 方法的实践者提倡 [“原子笔记”](https://zettelkasten.de/posts/create-zettel-from-reading-notes/) ，即短到可以放在一张纸片的笔记。Niklas Luhmann 所用的 “Zettels”（德语，意为 “纸条”）实际上是 A6 大小。对于美国的读者来说，这大概是一张明信片的尺寸。

那么，一篇笔记应该有多长？我们是否应该拥抱数字笔记的自由，并写下瓜瓞绵绵、谋篇缜密的笔记？我们是否应该坚持原子笔记的特点，保持其短小精悍？笔记的篇幅到底有没有关系？令人惊讶的是，在 PKM 领域（Personal Knowledge Manager，个人知识管理），笔记大小的问题很少被讨论。诸如 [标签与文件夹之争](https://www.obsidianroundup.org/yet-another-hot-take-on-folders-versus-tags/) 、[反向链接价值几何](https://zettelkasten.de/posts/backlinks-are-bad-links/) 这样的话题已是老生常谈，有些话题如 [“归档与分类”](https://www.theguardian.com/commentisfree/2020/oct/11/still-filing-your-emails-science-says-its-a-waste-of-time) 甚至挤进了学术研究领域。关于笔记大小及其优缺点的讨论则相对较少，只有少数来自 Zettelkasten 用户的声音。

小笔记的观念模式
--------

小笔记（Small Notes）的拥趸认为，将自己限制在一个简短的纸条上有其益处，因为它迫使你简明扼要；尺寸限制被视为一个特点，而不是一个错误（as a feature, not as a bug）。正如 Sönke Ahrens 所说：

> 即使软件没有了像卡片那样的篇幅限制，我还是建议大家像在纸卡上写笔记一样精简内容。有了格式的约束，我们就会限制自己在每张卡片上只记录一个想法，让自己尽可能做到精确和简洁，这也便于我们以后重新组合这些笔记。卢曼的经验是使用 A6 纸张大小的卡片，而我们在使用应用软件时，比较好的做法是让每条笔记的信息量不超过电脑或手机的一屏，而不需要滚动滑页。[3](#fn:4)

尽管如此，笔记原子化并不意味着思想也是原子般割裂、碎片化的。思想之间的联系可以用笔记链来表示，这种技术被卢曼创造为 [“Folgezettel”](https://zettelkasten.de/posts/kinds-of-ties/)（德语，后续笔记）。[4](#fn:5) 另一种创建结构的方法是创建第二个层级的笔记（second-order notes）：包含其他笔记信息的笔记。[Nick Milo](https://medium.com/@nickmilo22/in-what-ways-can-we-form-useful-relationships-between-notes-9b9ec46973c6) 推广了 “内容地图”（Maps of Contents, MoC）这一术语，和目录相比，这是一种充当索引的笔记。MoC 的意思是，与严格的大纲相比，它是一种从小型笔记中创造意义的方式，更为时兴而流畅。无论采用哪种方法，内部链接（即从一个笔记到另一个笔记的链接）都是将复杂的思想组合成原子概念的关键一环。因此，由小笔记组成的知识库之 “成熟度”（maturity），应当与笔记网络中的链接密度相呼应。

另一个经常与小笔记相关的概念是扁平的层级结构，正如 Zettelkasten 用户所看到的那样，他们通常喜欢基于标签的扁平系统，而不是文件夹层级体系。例如，Luhmann 极力反对对思想进行分层组织，他担心分层系统会 “将[他] 提前几十年束缚在某种秩序中”[5](#fn:6)。小笔记扁平分层，旨在鼓励我们主动寻找联系，而不是接受别人强加的秩序。理想情况下，我们在以前不相关的主题之间追寻联系，从而变得更有创造力，这种效果也被称为 [偶然性（serendipity）](https://www.merriam-webster.com/dictionary/serendipity)。

概言之，“小笔记思维” 的特点是采用一种更**自下而上**的笔记方法，面向那些想要开发新想法的知识工作者。

大笔记的观念模式
--------

与小笔记相比，做大笔记（Big Notes）对我们大多数人来说应该更熟悉，因为它与写笔记的传统方式相符。一般来说，与一个更宏大的主题相关的多个想法和见解，会被汇集在一个笔记中。然而，大笔记与小笔记的差异不仅见于篇幅，更在于前者的结构是在内部形成的。小笔记中的知识需要乞援其他笔记，在外部创造结构化；而大笔记，则是通过融入各种格式化元素进行内部结构化——标题、列表、列举和段落，都是为了在一团乱麻中创造秩序，否则大笔记就成为一摊浆糊。更高级的结构化需要嵌套前述格式化元素，比如说小标题，或者嵌套列表——后者可以视作 [大纲方法](https://medium.goodnotes.com/how-the-outline-note-taking-method-works-f0808ea2cbfa) 的标志性特征。(我印象最深刻的嵌套式列表，是维特根斯坦的[《逻辑哲学论》](https://www.gutenberg.org/files/5740/old/5740-pdf%202010-10-22.pdf#page=27) ，这本书有 150 页，但它尽是列表套列表以及更多的列表……)

可以想见，大笔记往往会比小笔记网络引入更多的层级结构。然而，这并不一定是一个缺点，也可以被看作是一种优势。Andrew Abbott 是一位社会学家，他和 Luhmann 一样，早在 PKM 一词出现之前就处理了知识管理的问题。Abbott 强调层级秩序益于他这样的研究者：

> 作为一个研究者，你需要更多的控制。而不是限于网络衍生出的相关性列表，因为你的目的是创造一个凝炼的、最终是线性的论证。此外，一旦你开始分析，就需要实时、轻松地回想起材料。你不但需要组织，而且需要快速组织。事实证明，层级结构是最易于实现即时回忆的组织体系——尽管层级结构牺牲了一些超链接——因为分级分类消耗的脑力更少。[6](#fn:7)

严格的层次结构能使你尽快找到特定的信息，而更加网络化和扁平化的结构则需要太多的心理负担。需要搜索某一信息时，你会从主题开始，随后移步至相应小节。因此，大笔记知识库的 “成熟度” 与平均的笔记规模和结构维度相对应。

身处这样的系统中，秩序不会主动涌现，而是在初期就被创造了，这让大笔记更适合于收集既定知识。毕竟，既然许多比我们聪明的人已经栽树在前，我们又何必重新发明轮子，用自己的想法来创造秩序呢？正如每一个伟大的思想家都 [站在巨人的肩膀上](https://www.wikiwand.com/en/Standing_on_the_shoulders_of_giants)，每一个大笔记都立足于无数先驱的小笔记之上。诚如所思，我假设相较于从事创造性工作之士，做技术性笔记的人可能写出更长的笔记。

一言以蔽之，“大笔记思维” 的特点是**自上而下**，以组织既有知识为鹄的。

大小真的很重要吗？
---------

谈及不同笔记篇幅的利弊时，不能忽视，笔记尺寸也许根本就没有起到这么大的作用。试想两种关于水果信息的笔记方案：我们可以为每种水果创建一篇笔记，然后再写一篇名为 “水果” 的 MoC，并链接到之前的笔记；或者，也可以直接写一篇 “水果” 的笔记，再为每一种水果创建小标题，并将具体内容置于其下。两种做法有何区别？

原则上，“一个思想，一个笔记” 的做法可以转化为 “一个思想，一个要点”，这可能是许多人在使用 [Roam Research](https://roamresearch.com/) 等大纲工具时的做法——思想原子性不一定会导致笔记的原子性。层级结构的优势也不限于大笔记，若您愿意，MoC 也可以组织得井井有条。况且，关联的思维不一定非得囿于小笔记，维基百科就是长篇文章与密集链接共存的典型例子。又如，[Johnny Decimal](https://johnnydecimal.com/) 的编码系统是分层次的，不过它们对笔记较少的人来说也奏效。

我们在现代笔记软件中掌握的工具，进一步缩小了大笔记和小笔记之间的差距。有人可能会说，小笔记便于搜索，但最近的笔记软件也能让你搜索文中的小标题（或者 [这方面的插件](https://obsidian.md/plugins?id=obsidian-another-quick-switcher)）；也有人会说，大笔记利于一次性读完所有内容，而不必在细碎的笔记之间切换，但话说回来，时髦的笔记软件也常有 [嵌入笔记的功能](https://help.obsidian.md/How+to/Embed+files#Embed+notes)[7](#fn:8)，你可以很容易地将几个小笔记汇总浏览；而且，如果你想链接到具体想法，那么即使你写的是长篇笔记，也可以借助 [标题和区块的链接](https://help.obsidian.md/How+to/Link+to+blocks) 实现跳转 [8](#fn:9)。

那么，笔记的大小还有什么意义？我认为，笔记是大是小仍然值得重视，虽然可能没有一开始设想的那么多。依我愚见，差异不在具体操作，而是工具选择：大笔记与小笔记需要不同的工具。

做小笔记的工具
-------

链接是小笔记的粘合剂，故支持创建和发现链接的功能在这里最有价值。[反向链接](https://help.obsidian.md/Plugins/Backlinks) 或 [自动补全](https://help.obsidian.md/How+to/Internal+link#Link+to+files) 只还仅仅是冰山一角。最近，像 [Influx](https://github.com/jensmtg/influx) 或 [Strange New Worlds](https://github.com/TfTHacker/obsidian42-strange-new-worlds) 等插件展示了更多相关笔记，而 [自动建议功能](https://tadashi-aikawa.github.io/docs-obsidian-various-complements-plugin/1.%20Features/Internal%20link%20complement/) 甚至能链接到你未曾想到的笔记。当 “这两个笔记是相关的” 这一信息过于笼统时，像 [Breadcrumbs](https://obsidian.md/plugins?id=breadcrumbs) 这样的插件可以进一步区分链接类型，比如指出链接背后的是上位笔记还是子笔记。

笔记数量日积月累，探索日渐膨胀的知识库可能令人生畏，此时可求助于各种 [基于网络视角的分析工具](https://obsidian.md/plugins?id=graph-analysis)，比如 [Graph View](https://tadashi-aikawa.github.io/docs-obsidian-various-complements-plugin/1.%20Features/Internal%20link%20complement/)。我猜想，[那些](https://www.arthurperret.fr/blog/2022-02-13-what-is-the-point-of-a-graph-view.html) 在 Graph View 中收获寥寥的人，往往是那些拥有少量大型笔记的人，若诚如此，俯瞰笔记网络确实食之无味。另外，数据库相关的功能——例如 [Notion](https://www.notion.so/product?fredir=1) 等软件的内置功能，以及 Obsidian 中的 [Dataview](https://obsidian.md/plugins?id=dataview) 或 [Database Folder](https://obsidian.md/plugins?id=dbfolder) 插件——也会因为小笔记的积累而日益增值，因为你越发需要汇总笔记。

然而，小笔记不是仅仅关于链接。小笔记知识系统的一个关键特征在于，你往往更频繁地创建新笔记；而在大笔记系统中，新见解则是被整合到当前笔记中。当你每天创建十个笔记时，[高级模板](https://obsidian.md/plugins?id=templater-obsidian) 和 [快速创建新笔记](https://obsidian.md/plugins?id=quickadd) 的功能就开始脱颖而出，而当你每周只创建一个笔记时，这些功能则意义不大。[自动归档笔记](https://obsidian.md/plugins?id=auto-note-mover) 或 [自动索引笔记](https://obsidian.md/plugins?id=zoottelkeeper-obsidian-plugin) 的插件也是如此。此外，更多的笔记意味着整个知识库——平均来说——也应该有更多的元数据（metadata），因而需要多加重视。如果不考虑元数据而直接搜索搜索笔记标题，你通常会得到铺天盖地的搜索结果。这使得 [处理元数据的插件](https://obsidian.md/plugins?id=metadata-menu) 和前面提到的数据库类型插件一样，和小笔记系统相得益彰。

此外，小笔记用户倾向于在不同笔记之间频频切换，因为你的知识在某种意义上比大笔记系统更 “分散”。在笔记之间 [快速切换](https://help.obsidian.md/Plugins/Quick+switcher) 的 Ergo 功能粉墨登场，它不仅包括字面意思上的 [快速切换器](https://obsidian.md/plugins?id=obsidian-another-quick-switcher)，还涵盖了 [快速跳转](https://obsidian.md/plugins?id=mrj-jump-to-link) 到其他笔记的插件。不过，另一种思路是瞥一眼笔记，而不是实际切换到它。在这方面，我想到了 [笔记预览弹出窗口](https://help.obsidian.md/Plugins/Page+preview) 等功能。想象一下，当链接背后的笔记长达 2000 字，预览将比只展示前两行要舒服得多。

做大笔记的工具
-------

那么大笔记呢？相较小笔记，你一般会在一篇大笔记上耗时更多，这意味你更需要在笔记内部导航的工具，而不是在笔记之间穿梭。典型如 [笔记大纲](https://help.obsidian.md/Plugins/Outline)，当你的笔记只有区区一两段时，它确实只是年夜饭上的凉菜；但当你要处理几十个标题和副标题时，它就很需要大纲工具。快速切换器类型的插件同样可助一臂之力——主要不是因为它们在笔记之间的切换功能，而是因为它们能够 [导航到标题](https://github.com/tadashi-aikawa/obsidian-another-quick-switcher#2-header-floating-search-in-file--header-search-in-file) 或 [当前笔记中的其他位置](https://github.com/darlal/obsidian-switcher-plus#symbol-navigation-headings-hashtags-links-embeddings)（尽管鲜为人知）。[9](#fn:10)

“笔记内导航” 的另一种方式是钩玄提要，摘出重点。这就是 [折叠](https://help.obsidian.md/How+to/Folding) 或 [相关](https://obsidian.md/plugins?id=creases) 功能为何在大笔记中如鱼得水，毕竟在只有两个标题的小笔记中，折叠其实没什么意思。数据库类型的插件在这方面也很有用，因为它们能够 [过滤特定类型的笔记](https://blacksmithgu.github.io/obsidian-dataview/queries/query-types/#task-queries)，比如只展示任务（暂且不论汇总笔记的功能）；与此相关，数据库插件还可以增强笔记可读性，诸如 [彩色标签](https://obsidian.md/plugins?id=obsidian-colorful-tag)、[内部链接图标](https://obsidian.md/plugins?id=supercharged-links-obsidian) 或 [外部链接图标](https://obsidian.md/plugins?id=link-favicon) 不仅赏心悦目，也能创造视觉锚点，方便在长篇大论中寻找信息。代码编辑器的 [minimap](https://github.com/gorbit99/codewindow.nvim) 功能也有与此异曲同工，我怀疑迟早会看到 minimap 出现在笔记软件中。

如前所述，大笔记系统倾向于通过笔记格式而不是链接来创建结构。这表明，在大笔记组成的数据库中，任何便于创建结构的工具都能够占据有一席之地。一方面，有一些工具可以自动生成 [目录](https://obsidian.md/plugins?id=obsidian-plugin-toc)；另一方面，也有一些工具可以快速 [重排列表](https://obsidian.md/plugins?id=obsidian-outliner) 或 [自动修复标题级别](https://github.com/platers/obsidian-linter/blob/master/docs/rules.md#header-increment)。不过，虽然链接到其他笔记（对于大笔记来说）不是第一位的，但仍有一定价值。链接到特定的标题 [甚至区块](https://help.obsidian.md/How+to/Link+to+blocks) 的能力，可以让浏览大笔记数据库变得更加轻松。而且需要留意，这种链接也可以用来从笔记中的某个位置链接到同一笔记中的不同位置 [10](#fn:11)。

最后，与小笔记系统相比，大笔记系统往往是在现有笔记上添砖加瓦，而非像小笔记系统那样另起炉灶。大笔记系统更受益于可以追加、前置或移动文本的工具，而模板类工具则用处不大。因此，像 [Text Transporter](https://obsidian.md/plugins?id=obsidian42-text-transporter) 这样的插件能让大笔记如虎添翼，因为它们能让你把文字插入到特定位置，甚至不需要专门打开它。

总结
--

诚然，有一种声音 [批评](https://www.youtube.com/watch?v=Wk8sDh9w6ts) 道：你应该专注于笔记本身，而不是追逐每一个时髦的新玩具。但我们也不应该落入彻底无视工具之选的陷阱。工具并非中立的，因为它需要我们去操作；笔记方法也不能独立于工具之外，因为它们在某些工具上就是比其他工具效果更好。问题或许不在于大笔记与小笔记之争，而在于是否选择了与方法相匹配的工具。

重考一款工具究竟是为哪一种类型的笔记量体裁衣（通常只是隐含的），有助于找到我们真正需要的工具。或者，我们可以反其道而行之，让我们最擅长的工具来塑造笔记风格？最后，如果你确实想从一个笔记系统过渡到另一个，也可以通过切换工具完成笔记方法的 [过渡](https://obsidian.md/plugins?id=note-refactor-obsidian)。